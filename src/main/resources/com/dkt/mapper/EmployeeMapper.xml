<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dkt.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.dkt.entity.Employee">
    <!--@Table employee-->
    <id column="eid" jdbcType="INTEGER" property="eid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="is_fire" jdbcType="VARCHAR" property="isFire" />
  </resultMap>
  <sql id="Base_Column_List">
    eid, `name`, phone, `password`, address, `type`, is_fire
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where eid = #{eid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where eid = #{eid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="eid" keyProperty="eid" parameterType="com.dkt.entity.Employee" useGeneratedKeys="true">
    insert into employee (`name`, phone, `password`, 
      address, `type`, is_fire
      )
    values (#{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{isFire,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="eid" keyProperty="eid" parameterType="com.dkt.entity.Employee" useGeneratedKeys="true">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="isFire != null">
        is_fire,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isFire != null">
        #{isFire,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.entity.Employee">
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="isFire != null">
        is_fire = #{isFire,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.entity.Employee">
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      is_fire = #{isFire,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=INTEGER}
  </update>

  <select id="selectAllEmployee" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE type=0 ORDER BY is_fire DESC,eid DESC
    </select>

  <select id="selectByPhonePasswordType" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE phone=#{phone,jdbcType=VARCHAR} AND `password`=#{password,jdbcType=VARCHAR} AND type=#{type,jdbcType=VARCHAR}
  </select>

  <select id="selectByPage" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE type=0 LIMIT #{startIndex,jdbcType=INTEGER},#{len,jdbcType=INTEGER}
  </select>

  <select id="selectByPhone" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE phone=#{phone,jdbcType=VARCHAR}
    </select>

  <select id="selectEmployeeTotalCount" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM employee WHERE type=0
    </select>

  <select id="selectEmployeeTotalCountFire" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM employee WHERE type=0 AND is_fire=1
  </select>

  <select id="selectEmployeeFireByPage" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE type=0 AND is_fire=1 LIMIT #{startIndex,jdbcType=INTEGER},#{len,jdbcType=INTEGER}
  </select>

  <select id="selectEmployeeTotalCountNotFire" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM employee WHERE type=0 AND is_fire=0
  </select>

  <select id="selectEmployeeNotFireByPage" resultMap="BaseResultMap">
    SELECT * FROM employee WHERE type=0 AND is_fire=0 LIMIT #{startIndex,jdbcType=INTEGER},#{len,jdbcType=INTEGER}
  </select>
</mapper>